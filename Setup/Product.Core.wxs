<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright Â© 2017-2020 Deepak Rathi 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see<http://www.gnu.org/licenses/> .
 -->
<!-- The name of the product -->
<?define Name = "VS2017 2019 2022 Offline Setup Utility" ?>
<!-- The Description of the product -->
<?define Description = "This utility allow downloading offline setup or deletion of old version Visual Studio 2017 2019 2022 Offline Setup files and folder" ?>
<!-- The manufacturer, for setup package publisher and folder info -->
<?define Manufacturer = "Deepak Rathi" ?>
<!-- The version number of this setup package-->
<?define Version = "1.4.4" ?>
<!-- UpgradeCode must be unique and not changed once the first version of the program is installed. -->
<?define UpgradeCode = "a49a94d4-f09a-4e3b-9b7e-b058cddd504e" ?>
<!-- The name of the Cabinet -->
<?define CabName = "VS20172019OfflineSetupUtil.cab" ?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <!--Variable for Application Directory-->
  <?define VS2017OfflineSetupUtil_Application_TargetDir=$(var.VS2017OfflineSetupUtility.TargetDir)?>

  <Product Id="*" Name="$(var.Name)" Manufacturer="$(var.Manufacturer)" UpgradeCode="$(var.UpgradeCode)" Version="$(var.Version)" Language="1033">

    <!--Setup or Installer with properties-->
    <Package InstallerVersion="200" Compressed="yes" InstallScope="perUser" InstallPrivileges="limited" Description="$(var.Name)" Manufacturer="$(var.Manufacturer)" />

    <!--Application logo-->
    <Icon Id="Logo.ico" SourceFile="$(var.VS2017OfflineSetupUtility.TargetDir)\Assets\logo.ico" />

    <!--Application logo for Control Panel-->
    <Property Id="ARPPRODUCTICON" Value="Logo.ico" />

    <!--Embed Cabinet into single msi file-->
    <Media Id="1" Cabinet="$(var.CabName)" EmbedCab="yes" />

    <!-- Allow upgrades and prevent downgrades -->
    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />

    <!--Main Feature for this Setup which can be found in Fragment Tag with ComponentGroupRef Id-->
    <Feature Id="ProductFeature" Title="$(var.Name)" Level="1">
      <!--Main application executable component-->
      <ComponentGroupRef Id="ProductComponents" />
      <!--Main application shortcut for Program Menu-->
      <ComponentRef Id="ApplicationShortcut" />
      <!--Desktop shortcut-->
      <ComponentGroupRef Id="ComponentGroupDesktopShortcut" />
    </Feature>
  </Product>

  <!--Fragment with details of installation directory-->
  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="LocalAppDataFolder">
        <!-- Create a folder inside program files with Company Name-->
        <Directory Id="ROOTDIRECTORY" Name="$(var.Manufacturer)">
          <!-- Create a folder inside Company Name folder with Product Name-->
          <Directory Id="INSTALLFOLDER" Name="$(var.Name)">
            <Directory Id="DesktopFolder" Name="DesktopFolder" />
          </Directory>
        </Directory>
      </Directory>
      <!--Create application folder in Program Menu-->
      <Directory Id="ProgramMenuFolder">
        <Directory Id="ApplicationProgramsFolder" Name="$(var.Name)" />
      </Directory>
    </Directory>
  </Fragment>

  <!--Main Feature Fragment with application executable-->
  <Fragment>
    <!--ComponentGroup refering to install component in INSTALLFOLDER Directory-->
    <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
      <!--Main Component with Sample Application executable path-->
      <Component Id="VS2017OfflineSetupUtil_Application.exe" Guid="*">
        <File Id="VS2017OfflineSetupUtil_Application.exe" Name="VS2017OfflineSetupUtility.exe" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)VS2017OfflineSetupUtility.exe" />
        <!-- Remove all files from the INSTALLFOLDER on uninstall -->
        <RemoveFile Id="ALLFILES" Name="*.*" On="both" />
      </Component>
      <!--Component with file of VS2017OfflineSetupUtil application-->
      <Component Id="VS2017OfflineSetupUtil_Application.dll" Guid="*">
        <File Id="VS2017OfflineSetupUtil_Application.dll" Name="VS2017OfflineSetupUtility.dll" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)VS2017OfflineSetupUtility.dll" />
      </Component>
      <Component Id="VS2017OfflineSetupUtil_Application.dll.config" Guid="*">
        <File Id="VS2017OfflineSetupUtil_Application.dll.config" Name="VS2017OfflineSetupUtility.dll.config" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)VS2017OfflineSetupUtility.dll.config" />
      </Component>
      
      <Component Id="VS2017OfflineSetupUtil_Application.deps.json" Guid="*">
        <File Id="VS2017OfflineSetupUtil_Application.deps.json" Name="VS2017OfflineSetupUtility.deps.json" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)VS2017OfflineSetupUtility.deps.json" />
      </Component>
      <Component Id="VS2017OfflineSetupUtil_Application.runtimeconfig.json" Guid="*">
        <File Id="VS2017OfflineSetupUtil_Application.runtimeconfig.json" Name="VS2017OfflineSetupUtility.runtimeconfig.json" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)VS2017OfflineSetupUtility.runtimeconfig.json" />
      </Component>
      
      <Component Id="Newtonsoft.Json.dll" Guid="*">
        <File Id="Newtonsoft.Json.dll" Name="Newtonsoft.Json.dll" Source="$(var.VS2017OfflineSetupUtil_Application_TargetDir)Newtonsoft.Json.dll" />
      </Component>
    </ComponentGroup>
  </Fragment>

  <Fragment>
    <DirectoryRef Id="ApplicationProgramsFolder">
      <!--Create application shortcut in Program Menu-->
      <Component Id="ApplicationShortcut" Guid="*">
        <Shortcut Id="ApplicationStartMenuShortcut" Name="$(var.Name)" Description="$(var.Description)" Icon="Logo.ico" Target="[#VS2017OfflineSetupUtil_Application.exe]" WorkingDirectory="INSTALLFOLDER" />
        <!--Remove application shortcut from Program Menu on uninstall-->
        <RemoveFolder Id="ApplicationProgramsFolder" On="uninstall" />
        <!--Create application registry entry-->
        <RegistryValue Root="HKCU" Key="Software\Microsoft\$(var.Manufacturer)\$(var.Name)" Name="installed" Type="integer" Value="1" KeyPath="yes" />
      </Component>
    </DirectoryRef>
  </Fragment>

  <Fragment>
    <!--Desktop Shortcut-->
    <ComponentGroup Id="ComponentGroupDesktopShortcut">
      <Component Id="ComponentDesktopShortcut" Guid="*" Directory="DesktopFolder" >
        <Shortcut Id="AppDesktopShortcut"
                  Name="$(var.Name)"
                  Description="$(var.Description)"
                  Directory="DesktopFolder"
                  Target="[#VS2017OfflineSetupUtil_Application.exe]"
                  WorkingDirectory="INSTALLFOLDER"/>
        <!--Remove desktop shortcut on uninstall-->
        <RemoveFolder Id="DesktopFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\$(var.Manufacturer)\$(var.Name)" Name="installed" Type="integer" Value="1" KeyPath="yes" />
      </Component>
    </ComponentGroup>
  </Fragment>
</Wix>
